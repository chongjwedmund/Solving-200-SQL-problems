-- Source: Data Lemur 

-- Histogram of Tweets [Twitter SQL Interview Question] 
-- Assume you're given a table Twitter tweet data, write a query to obtain a histogram of tweets posted per user in 2022. 
-- Output the tweet count per user as the bucket and the number of Twitter users who fall into that bucket.
-- In other words, group the users by the number of tweets they posted in 2022 and count the number of users in each group.

with cte as 
(select user_id, count(*) tweet_bucket 
from tweets 
where extract(year from tweet_date::date) = 2022 
group by user_id) 

select tweet_bucket, count(*) users_num 
from cte 
group by tweet_bucket

OR 

with cte as 
(select user_id, count(*) tweet_bucket
from tweets 
where tweet_date between '2022-01-01' and '2022-12-31'
group by user_id)

select tweet_bucket, count(user_id) 
from cte 
group by tweet_bucket 
order by tweet_bucket 

-- Data Science Skills [LinkedIn SQL Interview Question]
-- Given a table of candidates and their skills, you're tasked with finding the candidates best suited for an open Data Science job. 
-- You want to find candidates who are proficient in Python, Tableau, and PostgreSQL.
-- Write a query to list the candidates who possess all of the required skills for the job. Sort the output by candidate ID in ascending order.

select candidate_id from candidates 
where skill in ('Python', 'Tableau', 'PostgreSQL') 
group by candidate_id 
having count(*) = 3 

OR 

select candidate_id from 
(select candidate_id, count(*) skill_count from candidates 
where skill in ('Python', 'Tableau', 'PostgreSQL')
group by candidate_id) sq
where skill_count = 3 

OR 

with cte as 
(select candidate_id, count(skill) 
from(select candidate_id, skill
from candidates 
where skill in ('Python','Tableau','PostgreSQL')) sq
group by candidate_id 
having count(skill) = 3)

select candidate_id from cte 

-- Page With No Likes [Facebook SQL Interview Question] 
-- Assume you're given two tables containing data about Facebook Pages and their respective likes (as in "Like a Facebook Page").
-- Write a query to return the IDs of the Facebook pages that have zero likes. 
-- The output should be sorted in ascending order based on the page IDs.

with cte as 
(select p.page_id, l.user_id
from pages p
left join page_likes l
using (page_id) 
where l.user_id is null)

select page_id from pages 
where page_id in 
(select page_id from cte) 

OR 

select p.page_id
from pages p
full outer join page_likes pl 
using (page_id)
group by p.page_id 
having count(user_id) = 0 

OR 

select page_id 
from pages 
where page_id not in 
(select page_id from page_likes)

-- Unfinished Parts [Tesla SQL Interview Question] 
-- Tesla is investigating production bottlenecks and they need your help to extract the relevant data. 
-- Write a query to determine which parts have begun the assembly process but are not yet finished.

select distinct part from parts_assembly 
where finish_date is null 

-- Laptop vs. Mobile Viewership [New York Times SQL Interview Question] 
-- Assume you're given the table on user viewership categorised by device type where the three types are laptop, tablet, and phone. 
-- Write a query that calculates the total viewership for laptops and mobile devices where mobile is defined as the sum of tablet and phone viewership. 
-- Output the total viewership for laptops as laptop_reviews and the total viewership for mobile devices as mobile_views.

select 
sum(case when device_type = 'laptop' then 1 else 0 end) laptop_views, 
sum(case when device_type in ('tablet', 'phone') then 1 else 0 end) mobile_views 
from viewership 

OR 

select 
sum(case when device_type = 'laptop' then 1 else 0 end) laptop_views, 
sum(case when device_type <> 'laptop' then 1 else 0 end) mobile_views
from viewership

-- Average Post Hiatus (Part 1) [Facebook SQL Interview Question]
-- Given a table of Facebook posts, for each user who posted at least twice in 2021, write a query to find the number of days between each userâ€™s first post of the year and last post of the year in the year 2021. 
-- Output the user and number of the days between each user's first and last post.

select user_id, max(post_date::date) - min(post_date::date) days_between 
from posts 
where extract (year from post_date::date) = 2021
group by user_id 
having count(post_id) > 1

-- Teams Power Users [Microsoft SQL Interview Question] 
-- Write a query to identify the top 2 Power Users who sent the highest number of messages on Microsoft Teams in August 2022. 
-- Display the IDs of these 2 users along with the total number of messages they sent. 
-- Output the results in descending order based on the count of the messages.

select sender_id, count(*) message_count
from messages 
where extract(month from sent_date::date) = 8 
and extract(year from sent_date::date) = 2022
group by sender_id 
order by message_count desc 
limit 2

OR 

select sender_id, count(*) message_count
from messages 
where date_part('year', sent_date::date) = 2022
and date_part('month', sent_date::date) = 8
group by sender_id
order by message_count desc
limit 2

-- Duplicate Job Listings [Linkedin SQL Interview Question] 
-- Assume you're given a table containing job postings from various companies on the LinkedIn platform. 
-- Write a query to retrieve the count of companies that have posted duplicate job listings.
-- Duplicate job listings are defined as two job listings within the same company that share identical titles and descriptions. 

with cte as 
(select company_id, title, description, count(*)
from job_listings 
group by company_id, title, description)

select count(*) 
from cte 
where count > 1

OR 

select count(*) co_w_duplicate_jobs
from (select company_id, title, description 
from job_listings 
group by company_id, title, description
having count(*) <> 1) sq 

-- Cities With Completed Trades [Robinhood SQL Interview Question]
-- Assume you're given the tables containing completed trade orders and user details in a Robinhood trading system.
-- Write a query to retrieve the top three cities that have the highest number of completed trade orders listed in descending order. 
-- Output the city name and the corresponding number of completed trade orders.

select city, count(*) total_orders 
from trades t  
join users u   
using(user_id)
where status = 'Completed'
group by city 
order by count(*) desc 
limit 3 

OR 

select u.city, count(*) total_orders
from users u
join trades t 
on u.user_id = t.user_id 
where t.status = 'Completed'
group by city 
order by total_orders desc 
limit 3 

-- Average Review Ratings [Amazon SQL Interview Question] 
-- Given the reviews table, write a query to retrieve the average star rating for each product, grouped by month. 
-- The output should display the month as a numerical value, product ID, and average star rating rounded to two decimal places. 
-- Sort the output first by month and then by product ID.

select extract(month from submit_date::date) mth, 
product_id product, round(avg(stars),2) avg_stars
from reviews 
group by mth, product 
order by mth, product 

OR 

select date_part('month', submit_date::date) mth, product_id, 
round(avg(stars),2) avg_stars
from reviews
group by mth, product_id
order by mth, product_id 
