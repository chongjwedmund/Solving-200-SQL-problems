-- Source: Data Lemur 

-- Histogram of Tweets [Twitter SQL Interview Question] 
-- Assume you're given a table Twitter tweet data, write a query to obtain a histogram of tweets posted per user in 2022. 
-- Output the tweet count per user as the bucket and the number of Twitter users who fall into that bucket.
-- In other words, group the users by the number of tweets they posted in 2022 and count the number of users in each group.

with cte as 
(select user_id, count(*) tweet_bucket 
from tweets 
where extract(year from tweet_date::date) = 2022 
group by user_id) 

select tweet_bucket, count(*) users_num 
from cte 
group by tweet_bucket

OR 

with cte as 
(select user_id, count(*) tweet_bucket
from tweets 
where tweet_date between '2022-01-01' and '2022-12-31'
group by user_id)

select tweet_bucket, count(user_id) 
from cte 
group by tweet_bucket 
order by tweet_bucket 

-- Data Science Skills [LinkedIn SQL Interview Question]
-- Given a table of candidates and their skills, you're tasked with finding the candidates best suited for an open Data Science job. 
-- You want to find candidates who are proficient in Python, Tableau, and PostgreSQL.
-- Write a query to list the candidates who possess all of the required skills for the job. Sort the output by candidate ID in ascending order.

select candidate_id from candidates 
where skill in ('Python', 'Tableau', 'PostgreSQL') 
group by candidate_id 
having count(*) = 3 

OR 

select candidate_id from 
(select candidate_id, count(*) skill_count from candidates 
where skill in ('Python', 'Tableau', 'PostgreSQL')
group by candidate_id) sq
where skill_count = 3 

OR 

with cte as 
(select candidate_id, count(skill) 
from(select candidate_id, skill
from candidates 
where skill in ('Python','Tableau','PostgreSQL')) sq
group by candidate_id 
having count(skill) = 3)

select candidate_id from cte 

-- Page With No Likes [Facebook SQL Interview Question] 
-- Assume you're given two tables containing data about Facebook Pages and their respective likes (as in "Like a Facebook Page").
-- Write a query to return the IDs of the Facebook pages that have zero likes. 
-- The output should be sorted in ascending order based on the page IDs.

with cte as 
(select p.page_id, l.user_id
from pages p
left join page_likes l
using (page_id) 
where l.user_id is null)

select page_id from pages 
where page_id in 
(select page_id from cte) 

OR 

select p.page_id
from pages p
full outer join page_likes pl 
using (page_id)
group by p.page_id 
having count(user_id) = 0 

OR 

select page_id 
from pages 
where page_id not in 
(select page_id from page_likes)





